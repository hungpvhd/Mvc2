// <auto-generated />
using System;
using CrabStudent.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrabStudent.Migrations
{
    [DbContext(typeof(CrabStudentContext))]
    [Migration("20181106124350_Crabs")]
    partial class Crabs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CrabStudent.Models.Mark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StudentRollNumber");

                    b.Property<int>("SubjectMark");

                    b.Property<string>("SubjectName");

                    b.HasKey("Id");

                    b.HasIndex("StudentRollNumber");

                    b.ToTable("Mark");

                    b.HasData(
                        new { Id = 9999, StudentRollNumber = "D00529", SubjectMark = 9, SubjectName = "Java" },
                        new { Id = 9998, StudentRollNumber = "D00530", SubjectMark = 0, SubjectName = "Uwp" }
                    );
                });

            modelBuilder.Entity("CrabStudent.Models.Student", b =>
                {
                    b.Property<string>("RollNumber")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateAt");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int>("Status");

                    b.Property<DateTime>("UpdateAt");

                    b.HasKey("RollNumber");

                    b.ToTable("Student");

                    b.HasData(
                        new { RollNumber = "D00529", CreateAt = new DateTime(2018, 11, 6, 19, 43, 50, 561, DateTimeKind.Local), Email = "hungpvh00529@fpt.edu.vn", FirstName = "Hoang", LastName = "Hung", Status = 1, UpdateAt = new DateTime(2018, 11, 6, 19, 43, 50, 561, DateTimeKind.Local) },
                        new { RollNumber = "D00530", CreateAt = new DateTime(2018, 11, 6, 19, 43, 50, 561, DateTimeKind.Local), Email = "hungpvh00530@fpt.edu.vn", FirstName = "Hung", LastName = "Hoang", Status = 1, UpdateAt = new DateTime(2018, 11, 6, 19, 43, 50, 561, DateTimeKind.Local) }
                    );
                });

            modelBuilder.Entity("CrabStudent.Models.Mark", b =>
                {
                    b.HasOne("CrabStudent.Models.Student", "Student")
                        .WithMany("Marks")
                        .HasForeignKey("StudentRollNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
